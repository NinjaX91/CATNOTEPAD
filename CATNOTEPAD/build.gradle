apply plugin: 'com.android.application'
import java.util.regex.Pattern
apply plugin: 'com.microsoft.intune.mam'

task('increaseVersionCode') doLast{
    def manifestFile = file("src/main/AndroidManifest.xml")
    def pattern = Pattern.compile("versionCode=\"(\\d+)\"")
    def manifestText = manifestFile.getText()
    def matcher = pattern.matcher(manifestText)
    matcher.find()
    def versionCode = Integer.parseInt(matcher.group(1))
    def manifestContent = matcher.replaceAll("versionCode=\"" + ++versionCode + "\"")
    manifestFile.write(manifestContent)
}

task('incrementVersionName') doLast{
    def manifestFile = file("src/main/AndroidManifest.xml")
    def patternVersionNumber = Pattern.compile("versionName=\"(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)\"")
    def manifestText = manifestFile.getText()
    def matcherVersionNumber = patternVersionNumber.matcher(manifestText)
    matcherVersionNumber.find()
    def majorVersion = Integer.parseInt(matcherVersionNumber.group(1))
    def minorVersion = Integer.parseInt(matcherVersionNumber.group(2))
    def pointVersion = Integer.parseInt(matcherVersionNumber.group(3))
    def buildVersion = Integer.parseInt(matcherVersionNumber.group(4))
    def mNextVersionName = majorVersion + "." + minorVersion + "." + pointVersion + "." + (buildVersion + 1)
    def manifestContent = matcherVersionNumber.replaceAll("versionName=\"" + mNextVersionName + "\"")
    manifestFile.write(manifestContent)
}

tasks.whenTaskAdded { task ->
    if (task.name == 'generateReleaseBuildConfig' || task.name == 'generateDebugBuildConfig') {
        task.dependsOn 'increaseVersionCode'
        task.dependsOn 'incrementVersionName'
        task.dependsOn 'increaseVersionCode1'
        //      task.dependsOn 'incrementVersionName1'

    }
}
task('increaseVersionCode1') doLast{
    def buildFile = file("build.gradle")
    def pattern = Pattern.compile("versionCode\\s+(\\d+)")
    def manifestText = buildFile.getText()
    def matcher = pattern.matcher(manifestText)
    matcher.find()
    def versionCode = Integer.parseInt(matcher.group(1))
    def manifestContent = matcher.replaceAll("versionCode " + ++versionCode)
    buildFile.write(manifestContent)
}

def d1 = Calendar.getInstance();
def buildmonth = d1.toYearMonth();


def versionPropsFile = file('version.properties')
def versionBuild

/*Setting default value for versionBuild which is the last incremented value stored in the file */
if (versionPropsFile.canRead()) {
    def Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    versionBuild = versionProps['VERSION_BUILD'].toInteger()
} else {
    throw new FileNotFoundException("Could not read version.properties!")
}


/*Wrapping inside a method avoids auto incrementing on every gradle task run. Now it runs only when we build apk*/
ext.autoIncrementBuildNumber = {

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy.MM.dd-HH.mm')
    return formattedDate
}

android {
    dexOptions {
        javaMaxHeapSize "4G"
    }
    compileSdkVersion 30
    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"
    }


    defaultConfig {
        applicationId "ninja.cfg.catnotepad"
        minSdkVersion 28
        targetSdkVersion 30

        versionCode 290
        versionName "2.0.0." + versionCode

        signingConfig signingConfigs.debug
        multiDexEnabled true
        versionNameSuffix 'Rel' + buildmonth
        applicationIdSuffix 'CAT'
        testApplicationId 'ninja.cfg.catnotepad'
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix 'CAT'
        }
        debug {
            debuggable false

            //      minifyEnabled true
            //      shrinkResources true
            //      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '30.0.2'
    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }
    ndkVersion '21.3.6528147'


    repositories {
        //Deprecated, however cant remove due to intent builder being use.
        jcenter()
        google()

        mavenCentral()


        maven {
            url = 'https://oss.sonatype.org/content/repositories/snapshots'
            name = 'sonatypeSnapshot'
        }
            maven { url "http://dl.bintray.com/lukaville/maven" }
        maven {url "https://mvnrepository.com/artifact/com.google.firebase/firebase-firestore"}
        maven {
            url "https://s3.amazonaws.com/repo.commonsware.com"
        }
        maven {
            url "http://dl.bintray.com/lukaville/maven"
        }
        maven {
            url 'https://pkgs.dev.azure.com/MicrosoftDeviceSDK/DuoSDK-Public/_packaging/Duo-SDK-Feed/maven/v1'
        }
        maven {
            name "vsts-maven-adal-android"
            url "https://identitydivision.pkgs.visualstudio.com/_packaging/AndroidADAL/maven/v1"
            credentials {
                username System.getenv("ENV_VSTS_MVN_ANDROIDADAL_USERNAME") != null ? System.getenv("ENV_VSTS_MVN_ANDROIDADAL_USERNAME") : project.findProperty("vstsUsername")
                password System.getenv("ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN") != null ? System.getenv("ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN") : project.findProperty("vstsMavenAccessToken")
            }
        }
// variable that can be referenced to keep support libs consistent
        def supportLibVersion = '24.2.0'

        def dbflow_version = "4.2.4"
        def msalVersion = "2.0.8"
// Added this block
        configurations {
            implementation.exclude module:'gauva-jdk5'
            all*.exclude group: 'com.google.guava', module: 'listenablefuture'
        }
        dependencies {
            //noinspection GradleCompatible
            implementation 'androidx.appcompat:appcompat:1.3.0'
            implementation 'com.google.android.material:material:1.3.0'
            annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
            implementation "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
            implementation "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"
            implementation 'com.jakewharton:butterknife:10.2.3'
            annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
          implementation 'se.emilsjolander:intentbuilder-api:0.14.0'
            annotationProcessor 'se.emilsjolander:intentbuilder-compiler:0.14.0'
            implementation 'org.greenrobot:eventbus:3.0.0'
            implementation 'com.github.greenfrvr:hashtag-view:1.2.1'
            implementation 'com.facebook.stetho:stetho:1.5.1'
            implementation 'com.commonsware.cwac:richedit:0.5.3'
            implementation 'com.github.gcacace:signature-pad:1.2.0'
            implementation 'com.birbit:android-priority-jobqueue:3.0.0'
            implementation 'org.ocpsoft.prettytime:prettytime:5.0.0.Final'
            implementation 'com.nbsp:library:1.09'
//Added Values for App Center MS
            def appCenterSdkVersion = '4.1.0'
            implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
            implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"
            implementation "com.microsoft.appcenter:appcenter-distribute:${appCenterSdkVersion}"



            //Microsoft Graph Implementation
            implementation 'com.google.android.material:material:1.3.0'
            implementation 'com.microsoft.identity.client:msal:2.0.8'
            implementation ('com.microsoft.graph:microsoft-graph:1.5.0') {
                exclude group: 'javax.activation'
                // Added this line
                exclude group:'com.google.guava'
            }
            //Problem with Guava SDK
            //
        //    implementation 'com.google.firebase:firebase-analytics:19.0.0'
          //  implementation 'com.google.firebase:firebase-auth:21.0.1'
           // implementation 'com.google.firebase:firebase-firestore-ktx:23.0.1'
           // implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
           // implementation 'com.google.guava:guava:26.0-android'
            //MAM SDM Libraries
           implementation fileTree(dir: 'MAMSDK/libs', include: ['*.jar'])

            // Include the MAM SDK
            implementation files("MAMSDK/Microsoft.Intune.MAM.SDK.aar")


        }
      intunemam {
            excludeProjects = [':product:']
        includeExternalLibraries = ["com.microsoft.*", "!com.microsoft.qux*","androidx.*"]
          excludeClasses = ['ninja.cfg.SplashScreen']
            excludeVariants=['savory']
          report = true
          verify = true
          incremental = true
        }
        packagingOptions{
            pickFirst 'META-INF/*'
            exclude("META-INF/jersey-module-version")
        }
    }

}

dependencies {
    implementation files('C:\\Temp\\CATNOTEPAD22aad\\CATNOTEPAD2\\MAMSDK\\Microsoft.Intune.MAM.SDK.aar')
}